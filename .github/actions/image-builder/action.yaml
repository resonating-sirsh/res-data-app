name: Image Builder
description: builds and tags images, tests them, uses cache
inputs:
  tag:
    description: The build tag to use in the infra
    required: true
  name:
    description: An app name
    required: false
    default: "res"
  path:
    description: The path to the docker file (not including the Dockerfile)
    required: false
    default: ./res/docker/res-data
  AWS_SECRET_ACCESS_KEY:
    description: "AWS_SECRET_ACCESS_KEY"
    required: true
  AWS_ACCESS_KEY_ID:
    description: AWS_ACCESS_KEY_ID
    required: true
branding:
  icon: cloud
  color: orange
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push container image to registry
      shell: bash
      run: |
        label=$(echo ${{inputs.name}} | sed 's/[^[:alpha:]]/-/g')
        image_name=res-data_$label
        echo "Using the image $image_name and will create it if it does not exist"
        aws ecr create-repository --repository-name $image_name || true
        #the core tag takes this convention - we pass it to apps but ignore otherwise
        core="${{inputs.tag}}"
        docker buildx build --push -f ${{inputs.path}}/Dockerfile -t 286292902993.dkr.ecr.us-east-1.amazonaws.com/$image_name:${{inputs.tag}}  \
        --build-arg="RES_TAG=$core" \
        --cache-to mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=286292902993.dkr.ecr.us-east-1.amazonaws.com/$image_name:cache \
        --cache-from type=registry,ref=286292902993.dkr.ecr.us-east-1.amazonaws.com/$image_name:cache .

#e.g. old name res-data_production_meta-one_res-meta but its too cumbersome to do silly string manipulation scripts to preserve that
#we do want an image per app to make it easier to manage ER image retention policy although tag prefixes might have worked there too
#it may be necessary to do some cleanup later on the ECR images that might no longer be needed
