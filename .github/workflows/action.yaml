name: app-builder
on:
  push:
    branches:
      - main
    paths:
      - "apps/**"
      - "res/**"
  pull_request:
    branches:
      - main
    paths:
      - "apps/**"
      - "res/**"
jobs:
  #get the local changes and create a target infra PR - this is only stuff that is pinned to docker builds
  setup:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.prep-changed-apps.outputs.apps }}
      tag: ${{ steps.prep-changed-apps.outputs.tag }}
      workflows: ${{ steps.prep-changed-apps.outputs.workflows }}
      infra_branch: ${{ steps.prep-changed-apps.outputs.infra_branch}}
      all_applications: ${{ steps.prep-changed-apps.outputs.all_applications}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prep changed Apps
        id: prep-changed-apps
        run: |
          workflow_list=$(find "res_data_workflows" -mindepth 2 -maxdepth 2 -type d | sort -u | jq -R -s 'split("\n") | map(select(. != ""))' | jq -c '.  | unique')
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            app_list=$(git diff --name-only origin/main  | grep '^apps/' | awk -F/ '{print $1 "/" $2 "/" $3}' | sort -u | jq -R -s 'split("\n") | map(select(. != ""))' | jq -c '.  | unique')
          elif [[ ${{ github.event_name }} == 'push' ]]; then
            app_list=$(git diff --name-only HEAD^  | grep '^apps/' | awk -F/ '{print $1 "/" $2 "/" $3}' | sort -u | jq -R -s 'split("\n") | map(select(. != ""))' | jq -c '.  | unique')
          fi

          if [[ "${{github.event_name}}" != 'push' ]]; then
            branch="sourced-pr-${{  github.event.pull_request.number }}"
          else
            branch="sourced-main-$tag"
          fi

          echo "preparing output"
          echo "infra_branch=$branch" >> "$GITHUB_OUTPUT"
          echo "tag=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"
          echo "apps=$app_list" >> "$GITHUB_OUTPUT"
          echo "workflows=$workflow_list" >> "$GITHUB_OUTPUT"
  build-core:
    runs-on: ubuntu-latest
    needs:
      - setup
    steps:
      - uses: actions/checkout@v4
      - id: build-core-image
        #NB! this action is in the just checked out TARGET infra repo and NOT the apps repo
        uses: ./.github/actions/image-builder
        with:
          tag: ${{needs.setup.outputs.tag}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  process-apps:
    needs:
      - build-core
      - setup
    runs-on: ubuntu-latest
    if: ${{ needs.setup.outputs.apps != '[]' && needs.setup.outputs.apps != '' }}
    strategy:
      matrix:
        app: ${{fromJson(needs.setup.outputs.apps)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: build-app-image
        #NB! this action is in the just checked out TARGET infra repo and NOT the apps repo
        uses: ./.github/actions/image-builder
        with:
          tag: ${{needs.setup.outputs.tag}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          name: ${{ matrix.app }}
          path: ${{ matrix.app }}

  update-apps:
    runs-on: ubuntu-latest
    needs:
      - setup
      - build-core
      - process-apps
    steps:
      - uses: actions/checkout@v4
        with:
          repository: resonance/res-data-infra
          ssh-key: ${{ secrets.INFRA_SSH_KEY }}
      - id: update-apps
        #NB! this action is in the just checked out TARGET infra repo and NOT the apps repo
        uses: ./.github/actions/update-infra
        with:
          infra_branch: ${{needs.setup.outputs.infra_branch}}
          tag: ${{needs.setup.outputs.tag}}
          apps: ${{needs.setup.outputs.apps}}
          workflows: ${{needs.setup.outputs.workflows}}
          infra_token: ${{ secrets.INFRA_TOKEN }}
          infra_key: ${{ secrets.INFRA_SSH_KEY }}
