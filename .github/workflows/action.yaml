name: app-builder
on:
  push:
    branches:
      - main
    paths:
      - "apps/**"
      - "res/**"
  pull_request:
    branches:
      - main
    paths:
      - "apps/**"
      - "res/**"
jobs:
  #get the local changes and create a target infra PR
  setup:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.prep-changed-apps.outputs.apps }}
      tag: ${{ steps.prep-changed-apps.outputs.tag }}
      workflows: ${{ steps.prep-changed-apps.outputs.workflows }}
      infra_branch: ${{ steps.prep-changed-apps.outputs.infra_branch}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prep changed Apps
        id: prep-changed-apps
        run: |
          workflows=$(find "res_data_workflows" -mindepth 2 -maxdepth 2 -type d | sort -u | jq -R -s 'split("\n") | map(select(. != ""))' | jq -c '.  | unique')
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            app_list=$(git diff --name-only origin/main  | grep '^apps/' | awk -F/ '{print $1 "/" $2 "/" $3}' | sort -u | jq -R -s 'split("\n") | map(select(. != ""))' | jq -c '.  | unique')
          elif [[ ${{ github.event_name }} == 'push' ]]; then
            app_list=$(git diff --name-only HEAD^  | grep '^apps/' | awk -F/ '{print $1 "/" $2 "/" $3}' | sort -u | jq -R -s 'split("\n") | map(select(. != ""))' | jq -c '.  | unique')
          fi

          if [[ "${{github.event_name}}" != 'push' ]]; then
            branch="sourced-pr-${{  github.event.pull_request.number }}"
          else
            branch="sourced-main-$tag"
          fi

          echo "Apps changed are $app_list"
          echo "Workflows to update are $workflow_list"

          echo "tag=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"
          echo "apps=$app_list" >> "$GITHUB_OUTPUT"
          echo "workflows=$workflows" >> "$GITHUB_OUTPUT"
          echo "infra_branch=$branch" >> "$GITHUB_OUTPUT"

      - name: Checkout infra repo
        uses: actions/checkout@v4
        with:
          repository: resonance/res-data-infra
          ssh-key: ${{ secrets.INFRA_SSH_KEY }} #
          path: ""
          ref: main
      #we can do this only when we have tested our local build to avoid bloat
      - name: ensure-infra-branch

        run: |
          branch=${{steps.prep-changed-apps.outputs.infra_branch}}
          git checkout -b $branch
          if git ls-remote --heads origin | grep -q "refs/heads/$branch"; then
             git pull origin $branch
          else
            git push origin $branch
          fi
      - name: ensure-infra-pr
        run: |
          branch=${{steps.prep-changed-apps.outputs.infra_branch}}
          gh auth login --with-token <<< "${{ secrets.INFRA_TOKEN }}"
          echo "syncing remote infra PR..."
          prs=$(gh pr list -B main -H $branch)  
          if [[ "${{github.event_name}}" == 'pull_request' ]]; then
            if ((${#prs[@]} > 0 && ${#prs[0]} != 0 )); then
              echo "Skipping creation as we already have a PR for this branch"
            else    
              gh pr create --base main  --title "Infra PR from App: $branch" --body "adding infra"
            fi
          else
            if ((${#prs[@]} > 0 && ${#prs[0]} != 0 )); then
              echo "Warning! when merging the PR there was no remote infra PR"
            else    
              echo "Will create and merge the main branch"
              gh pr create --base main  --title "Infra request to merge to main from App: $branch" --body "adding infra to main cluster" 
              gh pr merge --auto --rebase 
            fi
          fi
        #################
